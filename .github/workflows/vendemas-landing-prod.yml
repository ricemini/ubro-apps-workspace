name: CI/CD - Vendemás Landing Production

on:
  push:
    branches: [main]
    paths:
      - 'apps/vendemas-landing-web/**'
      - 'libs/vendemas-shared-design/**'
      - 'libs/vendemas-shared-styles/**'
      - 'libs/vendemas-shared-i18n/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '.github/workflows/vendemas-landing-prod.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/vendemas-landing-web/**'
      - 'libs/vendemas-shared-design/**'
      - 'libs/vendemas-shared-styles/**'
      - 'libs/vendemas-shared-i18n/**'
      - 'package.json'
      - 'pnpm-lock.yaml'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8.15.0'
  ENVIRONMENT: 'production'
  FIREBASE_PROJECT: 'bistreet-cd883'

jobs:
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      cache-key: ${{ steps.cache-key.outputs.value }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        id: cache-key
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          echo "value=${{ runner.os }}-pnpm-store-${{ hashFiles('**/package.json') }}" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ steps.cache-key.outputs.value }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Security audit
        run: pnpm audit --audit-level moderate

  lint:
    name: Lint (Production)
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm nx lint vendemas-landing-web

  test:
    name: Test (Production)
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm nx test vendemas-landing-web --passWithNoTests

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-coverage
          path: coverage/
          retention-days: 7

  build:
    name: Build (Production)
    runs-on: ubuntu-latest
    needs: [setup, lint, test]
    timeout-minutes: 20
    outputs:
      build-output: ${{ steps.build-info.outputs.build-output }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Ensure public directory exists
        run: |
          mkdir -p apps/vendemas-landing-web/public
          ls -la apps/vendemas-landing-web/public

      - name: Build application (Production)
        id: build-info
        run: |
          pnpm nx build vendemas-landing-web
          echo "build-output=dist/vendemas-landing-web" >> $GITHUB_OUTPUT
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vendemas-landing-build
          path: dist/vendemas-landing-web
          retention-days: 1

      - name: Build size check
        run: |
          echo "📦 Build size analysis:"
          du -sh dist/vendemas-landing-web
          echo "📁 Build contents:"
          find dist/vendemas-landing-web -type f -name "*.js" | head -10

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 15
    environment:
      name: production
      url: https://vendemas-landing--bistreet-cd883.us-central1.hosted.app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: vendemas-landing-build
          path: dist/vendemas-landing-web

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase App Hosting (Production)
        run: firebase deploy --only apphosting --project ${{ env.FIREBASE_PROJECT }}
        env:
          FIREBASE_TOKEN: ${{ secrets.VENDEMAS_LANDING_WEB_PROD_FIREBASE_TOKEN }}
          NODE_ENV: production

      - name: Verify deployment
        run: |
          echo "✅ Production deployment completed successfully!"
          echo "🌐 Live URL: https://vendemas-landing--bistreet-cd883.us-central1.hosted.app"
          echo "📅 Deployment timestamp: $(date -u)"
          echo "🔗 Commit: ${{ github.sha }}"

      - name: Health check
        run: |
          echo "🏥 Performing health check..."
          sleep 30
          curl -f -s -o /dev/null -w "HTTP Status: %{http_code}\n" https://vendemas-landing--bistreet-cd883.us-central1.hosted.app || echo "⚠️ Health check failed - site may still be deploying"

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: Deployment Summary
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "🎉 Production deployment successful!"
            echo "🌐 URL: https://vendemas-landing--bistreet-cd883.us-central1.hosted.app"
            echo "📅 Time: $(date -u)"
            echo "🔗 Commit: ${{ github.sha }}"
          else
            echo "❌ Production deployment failed!"
            echo "🔗 Commit: ${{ github.sha }}"
            echo "📅 Time: $(date -u)"
          fi
